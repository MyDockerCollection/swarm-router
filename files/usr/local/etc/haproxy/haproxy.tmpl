global
    user haproxy
    maxconn 4096
    master-worker
    log /dev/log local0 warning

defaults
    log global
    mode tcp
    option tcplog
    option clitcpka
    option dontlognull
    retries 3
    timeout client 7200s
    timeout server 7200s
    timeout connect 60s
    default-server init-addr last,libc,none

resolvers docker
    nameserver dns 127.0.0.11:53
    resolve_retries 20
    timeout retry 1s
    hold timeout 5s
    hold valid 5s

listen stats
    bind *:1111
    mode http
    stats enable
    stats show-desc swarm-router status
    stats uri /

frontend swarm-router-http
    {{ range $port := split $.Env.HTTP_PORTS " " }}bind *:{{ $port }}
    {{ end }}
    mode http
    use_backend %[req.hdr(host),lower,field(1,':')]
    default_backend swarm-router-http

frontend swarm-router-tls
    {{ range $port := split $.Env.TLS_PORTS " " }}bind *:{{ $port }}{{ if $.Env.TLS_CERT }} ssl crt {{ $.Env.TLS_CERT }}{{ end }}
    {{ end }}
    mode tcp
    use_backend %[{{ if $.Env.TLS_CERT }}ssl_fc_sni(){{ else }}req.ssl_sni(){{ end }}]
    default_backend swarm-router-tls

backend swarm-router-http
    mode http
    server swarm-router-http 127.0.0.1:{{ $.HttpSwarmRouterPort }} check

backend swarm-router-tls
    mode tcp
    server swarm-router-tls 127.0.0.1:{{ $.TlsSwarmRouterPort }} check

{{ range $backend, $port := $.HttpBackends }}
backend {{ $backend }}
    mode http
    server {{ $backend }} {{ if $DnsBackendFqdn }}{{ $backend }}{{ else }}{{ $backend }}{{ end }}{{ $.DnsBackendSuffix }}:{{ $port }} check inter 10s resolvers docker
{{ end }}

{{ range $backend, $port := $.TlsBackends }}
backend {{ $backend }}
    mode tcp
    server {{ $backend }} {{ if $DnsBackendFqdn }}{{ $backend }}{{ else }}{{ $backend }}{{ end }}{{ $.DnsBackendSuffix }}:{{ $port }} check inter 10s resolvers docker
{{ end }}
